namespace myTiles {
    //% blockIdentity=images._tile
    export const tile0 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile1 = img`
1 1 1 2 2 2 2 2 2 2 1 1 1 2 2 2 
1 1 2 2 2 2 2 2 2 1 1 1 2 2 2 2 
1 2 2 2 2 2 2 1 1 1 1 2 2 2 2 2 
2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 
2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 
2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 
2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 
2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 
1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 
1 1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 
1 1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 
1 1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 
1 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 
2 2 2 2 2 1 1 1 1 2 2 2 2 2 2 1 
2 2 2 2 1 1 1 2 2 2 2 2 2 2 1 1 
2 2 2 1 1 1 2 2 2 2 2 2 2 1 1 1 
`
    //% blockIdentity=images._tile
    export const tile2 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile3 = img`
. . . . f 5 f . f 5 5 f . . . . 
. . . f 5 f 5 f 5 f f 5 f . . . 
. f f f 5 5 5 5 5 5 5 f f f f . 
. f 7 7 f f 7 5 5 2 f 2 2 2 f . 
. f 7 7 7 7 7 5 5 2 2 2 2 2 f . 
. f 7 7 7 7 7 5 5 2 2 2 2 2 f . 
. f 7 7 7 7 7 5 5 2 2 2 2 2 f . 
. f 7 7 7 7 7 5 5 2 2 2 2 2 f . 
. f 5 5 5 5 5 5 5 5 5 5 5 5 f . 
. f 5 5 5 5 5 5 5 5 5 5 5 5 f . 
. f 2 2 2 2 2 5 5 7 7 7 7 7 f . 
. f 2 2 2 2 2 5 5 7 7 7 7 7 f . 
. f 2 2 2 2 2 5 5 7 7 7 7 7 f . 
. f 2 2 2 2 2 5 5 7 7 7 7 7 f . 
. f 2 2 2 2 2 5 5 7 7 7 7 7 f . 
. f f f f f f f f f f f f f f . 
`
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Food, function (sprite, otherSprite) {
    coin.x = 975
    info.changeScoreBy(1)
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    if (snowman.vy == 0) {
        snowman.vy = -140
    }
})
let coin: Sprite = null
let snowman: Sprite = null
scene.setBackgroundColor(9)
effects.blizzard.startScreenEffect()
snowman = sprites.create(img`
. . . . . . f f f f . . . . . . 
. . . . . f f f f f f . . . . . 
. . . . f 1 f 1 1 f 1 f . . f . 
. . . f 1 1 f 4 1 f 1 1 f f 2 f 
. . . f f 1 1 4 4 1 1 f 2 2 f . 
. . f 2 2 f f f f f f 2 2 2 2 f 
. . . f 2 2 2 2 2 2 2 f f f 2 2 
. . f 1 f f f f f f f 1 1 f f f 
. f 1 1 1 1 1 1 1 1 1 1 1 1 f . 
. . f 1 1 1 1 f 1 1 1 1 1 f . . 
. . . f f f f f f f f f f . . . 
. f f 1 1 1 1 1 1 1 1 1 1 f f . 
f 1 1 1 1 1 1 f 1 1 1 1 1 1 1 f 
f 1 1 1 1 1 1 1 1 1 1 1 1 1 1 f 
. f f 1 1 1 1 f 1 1 1 1 1 f f . 
. . . f f f f f f f f f f . . . 
`, SpriteKind.Player)
controller.moveSprite(snowman, 100, 0)
snowman.ay += 300
scene.cameraFollowSprite(snowman)
coin = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . f f f f . . . . . . 
. . . . f f 5 5 5 5 f f . . . . 
. . . f 5 5 5 5 5 5 5 5 f . . . 
. . f 5 5 5 5 f 5 5 5 5 5 f . . 
. . f 5 5 5 5 5 f 5 5 5 5 f . . 
. f 5 5 5 5 5 5 f 5 5 5 5 5 f . 
. f 5 5 5 5 5 5 f 5 5 5 5 5 f . 
. f 5 5 5 5 5 5 f 5 5 5 5 5 f . 
. f 5 5 5 5 5 5 f 5 5 5 5 5 f . 
. . f 5 5 5 5 5 f 5 5 5 5 f . . 
. . f 5 5 5 5 f 5 5 5 5 5 f . . 
. . . f 5 5 5 5 5 5 5 5 f . . . 
. . . . f f 5 5 5 5 f f . . . . 
. . . . . . f f f f . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Food)
tiles.setTilemap(tiles.createTilemap(
            hex``,
            img`
2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . 2 2 . . . . . 2 . . 2 . . . . . . . . . . . . . . . . . 2 2 . . . 2 . 2 . . . . . . . . 
2 . . . 2 2 . . . . . . . . 2 2 2 . . . 2 . 2 . . . . . . . 2 . . . . . . . . . . 2 2 2 . . . . . 2 . . . 2 . . . . . . . 2 2 2 
2 . . . 2 . . . 2 2 . . . 2 . . 2 . . . 2 . . . . . . . . . 2 . . . . . . . . . . 2 . 2 . . . . . 2 . . . 2 . . . . . . . 2 . 2 
2 . . . 2 . . . . 2 . . . . . . 2 . . . 2 . . . . . . . . . 2 . . . . . 2 2 . . . . . 2 . . . . . 2 . . . 2 . . . . . . . . . 2 
2 . . . 2 . . . . 2 . . . . . . 2 . . . 2 . . . . . . . . . 2 . . . . . . 2 . . . . . 2 . . . . . 2 . . . 2 . . . . . . . . . 2 
`,
            [myTiles.tile0,myTiles.tile1,myTiles.tile2,sprites.dungeon.hazardLava1,sprites.castle.tilePath3,myTiles.tile3],
            TileScale.Sixteen
        ))
coin.x = 200
game.onUpdate(function () {
    if (snowman.y >= scene.screenHeight()) {
        game.over(false)
    }
})
game.onUpdateInterval(500, function () {
    if (snowman.x >= 1000) {
        game.over(true)
    }
})
